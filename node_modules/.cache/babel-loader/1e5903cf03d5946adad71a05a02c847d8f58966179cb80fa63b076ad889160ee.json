{"ast":null,"code":"var _jsxFileName = \"/Users/altynbekkuat/Desktop/React/cocktails-react/src/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [searxhTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  const fetchDrinks = async () => {\n    setLoading(true);\n    await fetch(`${url}${searxhTerm}`).then(response => response.json()).then(data => {\n      const {\n        drinks\n      } = data;\n      console.log('drinks:', drinks);\n      if (drinks) {\n        const newDrinks = drinks.map(item => {\n          const {\n            id,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: id,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newDrinks);\n        setLoading(false);\n      } else {\n        setCocktails([]);\n        setLoading(false);\n      }\n    });\n  };\n  useEffect(() => {\n    fetchDrinks();\n  }, [searxhTerm]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      searxhTerm,\n      cocktails,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"MUrgHtX4WX2IbPYQ5ubzPU9vzQs=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","jsxDEV","_jsxDEV","url","AppContext","createContext","AppProvider","children","_s","loading","setLoading","searxhTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","fetch","then","response","json","data","drinks","console","log","newDrinks","map","item","id","strDrink","strDrinkThumb","strAlcoholic","strGlass","name","image","info","glass","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/Users/altynbekkuat/Desktop/React/cocktails-react/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [searxhTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = async() => {\n    setLoading(true);\n    await fetch(`${url}${searxhTerm}`)\n      .then(response => response.json())\n      .then(data => {\n        const {drinks} = data;\n        console.log('drinks:', drinks)\n        if(drinks){\n          const newDrinks = drinks.map((item) => {\n            const {id, strDrink, strDrinkThumb, strAlcoholic, strGlass } = item;\n            return {\n              id:id,\n              name : strDrink,\n              image: strDrinkThumb,\n              info: strAlcoholic,\n              glass: strGlass\n            }\n          });\n\n          setCocktails(newDrinks);\n          setLoading(false);\n        } else {\n          setCocktails([]);\n          setLoading(false);\n        }\n      });\n  }\n  useEffect(() => {\n    fetchDrinks();\n  }, [searxhTerm])\n  return(\n    <AppContext.Provider value={{loading, searxhTerm,cocktails, setSearchTerm}}>\n      {children}\n    </AppContext.Provider>)\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,GAAG,GAAG,2DAA2D;AACvE,MAAMC,UAAU,gBAAGR,KAAK,CAACS,aAAa,CAAC,CAAC;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC7BL,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMM,KAAK,CAAE,GAAEb,GAAI,GAAEQ,UAAW,EAAC,CAAC,CAC/BM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAM;QAACC;MAAM,CAAC,GAAGD,IAAI;MACrBE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;MAC9B,IAAGA,MAAM,EAAC;QACR,MAAMG,SAAS,GAAGH,MAAM,CAACI,GAAG,CAAEC,IAAI,IAAK;UACrC,MAAM;YAACC,EAAE;YAAEC,QAAQ;YAAEC,aAAa;YAAEC,YAAY;YAAEC;UAAS,CAAC,GAAGL,IAAI;UACnE,OAAO;YACLC,EAAE,EAACA,EAAE;YACLK,IAAI,EAAGJ,QAAQ;YACfK,KAAK,EAAEJ,aAAa;YACpBK,IAAI,EAAEJ,YAAY;YAClBK,KAAK,EAAEJ;UACT,CAAC;QACH,CAAC,CAAC;QAEFjB,YAAY,CAACU,SAAS,CAAC;QACvBd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLI,YAAY,CAAC,EAAE,CAAC;QAChBJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;EACN,CAAC;EACDX,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAChB,oBACET,OAAA,CAACE,UAAU,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAC5B,OAAO;MAAEE,UAAU;MAACE,SAAS;MAAED;IAAa,CAAE;IAAAL,QAAA,EACxEA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAC1B,CAAC;AAAAjC,EAAA,CAvCKF,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAyCjB,OAAO,MAAMqC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,OAAO9C,UAAU,CAACM,UAAU,CAAC;AAC/B,CAAC;AAAAwC,GAAA,CAFYD,gBAAgB;AAI7B,SAASvC,UAAU,EAAEE,WAAW;AAAE,IAAAoC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}